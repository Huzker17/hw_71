@model List<Vacancy>
    <head>
        <link rel="stylesheet" href="~/css/site.css" />
    </head>
    <div class="container">
        <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">


        <div id="ext_comments">
            @if (Model != null)
            {
                <div id="myCards">

                </div>
            }
        </div>
        <div class="paging"></div>

    </div>
    <script>
    let htmlComment = '<div class="card item" style="width:100%"> <div class="card-body body"> <h5 class="card-title name"> </h5><p class="card-text time"></p><p class="card-text salary"></p>' +
        '<p class="bot"></p> </div></div>';
    let fillComments = function (comments) {
        $('#ext_comments').empty()
        for (let i = 0; i < comments.length; i++) {
            let id = 'comment_' + (i + 1)
            $('#ext_comments').last().append(htmlComment)
            $('#ext_comments .card').last().attr('id', id)
            $('#' + id + ' .name').text(comments[i].name)
            $('#' + id + ' .time').text(comments[i].updateTime)
            $('#' + id + ' .salary').text(comments[i].salary)
            $('#' + id + ' .bot').append('<button class="bot" onclick=MyFunction(' + comments[i].id + ')>Откликнуться</button>')
        }
        }
        let myFunction(id) {
            $.post('@Url.Action("Feedback", "Employee")',
                {
                    Id: id,
                },
                function (response) {
                });
        }
        $(function(){
        getComments(1)
    })
    let itemsPerPage = 20
    let getComments = function (curPage) {
        $.get('@Url.Action("AllComments", "Employee")', {
            'curPage': curPage,
            'itemsPerPage': itemsPerPage
        }, function (response) {
                console.log(response)
                createPagingButtons(response.commentPageViewModel.maxPage)
                $('.page_' + response.commentPageViewModel.curPage).attr('class', 'page-item active')
                fillComments(response.commentPageViewModel.vacancies)

        })
    }
     let pagination = '<nav">'+
        '<ul class="pagination" >'+
         '   <li class="page-item disabled">'+
          '      <span class="page-link" tabindex="-1" aria-disabled="true">Previous</span>'+
           ' </li>'+
            '<li class="next page-item">'+
             '   <span class="page-link" >Next</span>'+
            '</li>'+
        '</ul >'+
    '</nav >'
    let createPagingButtons = function (maxPage) {
        $('.paging').empty()
        if (maxPage > 1) {
        let button = ''
        for (let i = 1; i <= maxPage; i++) {
            button += '<li class="page_' + i +' page-item"><span class="page-link" onClick="switchPage('+i+')">'+i+'</span></li>'
        }
        $('.paging').append(pagination)
            $('.next').before(button)
        }
    }
    let switchPage = function (num) {
        getComments(num)
    }
    </script>
